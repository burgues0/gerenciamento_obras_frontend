import { ResponsavelTecnico } from './entities/responsavel-tecnico.entity';
import { ResponsaveisTecnicosRepository } from './responsaveis-tecnicos.repository';
import { CreateResponsavelTecnicoDto } from './dto/create-responsavel-tecnico.dto';
import { DocumentValidatorService } from '../shared/document-validator.service';
import { UpdateResponsavelTecnicoDto } from './dto/update-responsavel-tecnico.dto';
import { ObraResponsavelTecnicoRepository } from '../obra-responsavel-tecnico/obra-responsavel-tecnico.repository';
import { CreateVinculoObraDto } from '../obra-responsavel-tecnico/dto/create-obra-responsavel-tecnico.dto';
import { ObrasRepository } from '../obras/obras.repository';
import { ObraResponsavelTecnico } from '../obra-responsavel-tecnico/entities/obra-responsavel-tecnico.entity';
import { UpdateVinculoObraDto } from '../obra-responsavel-tecnico/dto/update-obra-responsavel-tecnico.dto';
export declare class ResponsaveisTecnicosService {
    private readonly responsaveisTecnicosRepository;
    private readonly obrasRepository;
    private readonly obrasResponsavelTecnicoRepository;
    private readonly documentValidatorService;
    constructor(responsaveisTecnicosRepository: ResponsaveisTecnicosRepository, obrasRepository: ObrasRepository, obrasResponsavelTecnicoRepository: ObraResponsavelTecnicoRepository, documentValidatorService: DocumentValidatorService);
    findAll(): Promise<ResponsavelTecnico[]>;
    findOne(id: number): Promise<ResponsavelTecnico>;
    create(input: CreateResponsavelTecnicoDto): Promise<ResponsavelTecnico>;
    update(id: number, input: UpdateResponsavelTecnicoDto): Promise<ResponsavelTecnico | null>;
    remove(id: number): Promise<boolean>;
    createVinculosObra(responsavelId: number, vinculosDto: CreateVinculoObraDto[]): Promise<ObraResponsavelTecnico[]>;
    updateVinculoObra(responsavelId: number, obraId: number, updateDto: UpdateVinculoObraDto): Promise<ObraResponsavelTecnico>;
    findAllVinculosObra(responsavelId: number): Promise<ObraResponsavelTecnico[]>;
    findVinculoObra(responsavelId: number, obraId: number): Promise<ObraResponsavelTecnico>;
    deleteVinculoObra(responsavelId: number, obraId: number): Promise<void>;
    private validarId;
    private obterResponsavelPorId;
    private validarDadosObrigatoriosParaCriacaoRT;
    private validarFormatoCPF;
    private validarCPF;
    private verificarCPFUnico;
    private verificarVinculosAtivos;
    private processarCriacaoVinculo;
    private processarEValidarDatas;
    private verificarExistenciaObra;
    private validarTipoVinculo;
    private verificarVinculoAtivo;
    private verificarConflitoDatas;
    private datasSobrepostas;
    private criarNovoVinculo;
    private processarDatasAtualizacao;
    private obterVinculoExistente;
    private verificarConflitosAtualizacao;
    private executarAtualizacao;
}
